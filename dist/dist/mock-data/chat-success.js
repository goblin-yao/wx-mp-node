const chat = {
    role: "assistant",
    id: "cmpl-6k8JAFfk5sKu0cTwbYedg5ynZoBdz",
    parentMessageId: "1fdf01d5-8386-4316-87e4-7e302f614072",
    conversationId: "c4102cac-5376-4fa9-a887-458331f1af12",
    text: "OpenAI is a research laboratory based in San Francisco, California, specializing in artificial intelligence (AI) and deep learning research. Founded in 2015 by Elon Musk, Sam Altman, Greg Brockman, and Ilya Sutskever, OpenAI aims to develop advanced technologies that can help humanity solve problems and make the world a better place.",
    detail: {
        id: "cmpl-6k8JAFfk5sKu0cTwbYedg5ynZoBdz",
        object: "text_completion",
        created: 1676453044,
        model: "text-davinci-003",
        choices: [
            {
                text: "\nOpenAI is a research laboratory based in San Francisco, California, specializing in artificial intelligence (AI) and deep learning research. Founded in 2015 by Elon Musk, Sam Altman, Greg Brockman, and Ilya Sutskever, OpenAI aims to develop advanced technologies that can help humanity solve problems and make the world a better place.",
                index: 0,
                logprobs: null,
                finish_reason: "stop",
            },
        ],
        usage: {
            prompt_tokens: 61,
            completion_tokens: 71,
            total_tokens: 132,
        },
    },
};
const chat1 = {
    role: "assistant",
    id: "cmpl-6kCsmjX3C5E67HdISdI7L93bH3Imo",
    parentMessageId: "411e8220-9d8f-447e-980a-8fa34749f1e8",
    conversationId: "193ffdd0-b114-4fdf-a03a-468acdabfd9f",
    text: "2",
    detail: {
        id: "cmpl-6kCsmjX3C5E67HdISdI7L93bH3Imo",
        object: "text_completion",
        created: 1676470628,
        model: "text-davinci-003",
        choices: [
            {
                text: "\n2",
                index: 0,
                logprobs: null,
                finish_reason: "stop",
            },
        ],
        usage: {
            prompt_tokens: 61,
            completion_tokens: 2,
            total_tokens: 63,
        },
    },
};
//# sourceMappingURL=data:application/json;base64,